# AUTOGENERATED FROM 'app/queries/create_chat.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class CreateChatResult(NoPydanticValidation):
    id: uuid.UUID
    new_chat_id: uuid.UUID


async def create_chat(
    executor: edgedb.AsyncIOExecutor,
    *,
    username: str,
) -> CreateChatResult | None:
    return await executor.query_single(
        """\
        with new_chat := (insert ChatHistory)
        select (
            update User filter .name = <str>$username
            set {
                chats := assert_distinct(.chats union new_chat)
            }
        ) {
            new_chat_id := new_chat.id
        }\
        """,
        username=username,
    )
